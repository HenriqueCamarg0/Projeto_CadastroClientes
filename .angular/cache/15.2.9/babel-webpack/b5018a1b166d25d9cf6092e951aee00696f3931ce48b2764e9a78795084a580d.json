{"ast":null,"code":"import { Cliente } from '../cliente';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/clientes.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ClientesFormComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Cliente salvo/atualizado com sucesso! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClientesFormComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const erro_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", erro_r6, \" \");\n  }\n}\nfunction ClientesFormComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 11)(2, \"div\", 12)(3, \"label\");\n    i0.ɵɵtext(4, \"ID:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 11)(7, \"div\", 12)(8, \"label\");\n    i0.ɵɵtext(9, \"Data Cadastro:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 23);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.cliente.id);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.cliente.dataCadastro);\n  }\n}\nfunction ClientesFormComponent_button_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 24);\n    i0.ɵɵelement(1, \"i\", 25);\n    i0.ɵɵtext(2, \" Salvar \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClientesFormComponent_button_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 26);\n    i0.ɵɵelement(1, \"i\", 27);\n    i0.ɵɵtext(2, \" Atualizar \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ClientesFormComponent {\n  constructor(service, router, activatedRoute) {\n    this.service = service;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.success = false;\n    this.cliente = new Cliente();\n  }\n  ngOnInit() {\n    let params = this.activatedRoute.params;\n    params.subscribe(urlParams => {\n      this.id = urlParams['id'];\n      if (this.id) {\n        this.service.getClienteById(this.id).subscribe(response => this.cliente = response, errorResponse => this.cliente = new Cliente());\n      }\n    });\n  }\n  voltarParaListagem() {\n    this.router.navigate(['/clientes-lista']);\n  }\n}\nClientesFormComponent.ɵfac = function ClientesFormComponent_Factory(t) {\n  return new (t || ClientesFormComponent)(i0.ɵɵdirectiveInject(i1.ClientesService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nClientesFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClientesFormComponent,\n  selectors: [[\"app-clientes-form\"]],\n  decls: 31,\n  vars: 8,\n  consts: [[1, \"mt-4\"], [1, \"breadcrumb\", \"mb-4\"], [1, \"breadcrumb-item\", \"active\"], [1, \"container\"], [3, \"ngSubmit\"], [\"clienteForm\", \"ngForm\"], [1, \"row\"], [1, \"col-md-12\"], [\"class\", \"alert alert-success\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"col-md-6\"], [1, \"form-group\"], [\"type\", \"text\", \"name\", \"nome\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"cpf\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-4\"], [\"type\", \"submit\", \"class\", \"btn btn-success\", 4, \"ngIf\"], [\"type\", \"submit\", \"class\", \"btn btn-primary ml-1\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"ml-1\", 3, \"click\"], [1, \"fa\", \"fa-arrow-alt-circle-left\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"], [\"type\", \"text\", \"name\", \"id\", \"disabled\", \"true\", 1, \"form-control\", 3, \"ngModel\"], [\"type\", \"text\", \"name\", \"dataCadastro\", \"disabled\", \"true\", 1, \"form-control\", 3, \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [1, \"fa\", \"fa-save\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"ml-1\"], [1, \"fa\", \"fa-sync-alt\"]],\n  template: function ClientesFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Clientes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"ol\", 1)(3, \"li\", 2);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"form\", 4, 5);\n      i0.ɵɵlistener(\"ngSubmit\", function ClientesFormComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7);\n      i0.ɵɵtemplate(10, ClientesFormComponent_div_10_Template, 2, 0, \"div\", 8);\n      i0.ɵɵtemplate(11, ClientesFormComponent_div_11_Template, 2, 1, \"div\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(12, ClientesFormComponent_div_12_Template, 11, 2, \"div\", 10);\n      i0.ɵɵelementStart(13, \"div\", 6)(14, \"div\", 11)(15, \"div\", 12)(16, \"label\");\n      i0.ɵɵtext(17, \"Nome: *\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function ClientesFormComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.cliente.nome = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"div\", 11)(20, \"div\", 12)(21, \"label\");\n      i0.ɵɵtext(22, \"CPF: *\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function ClientesFormComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.cliente.cpf = $event;\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(24, \"div\", 6)(25, \"div\", 15);\n      i0.ɵɵtemplate(26, ClientesFormComponent_button_26_Template, 3, 0, \"button\", 16);\n      i0.ɵɵtemplate(27, ClientesFormComponent_button_27_Template, 3, 0, \"button\", 17);\n      i0.ɵɵelementStart(28, \"button\", 18);\n      i0.ɵɵlistener(\"click\", function ClientesFormComponent_Template_button_click_28_listener() {\n        return ctx.voltarParaListagem();\n      });\n      i0.ɵɵelement(29, \"i\", 19);\n      i0.ɵɵtext(30, \" Voltar \");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.cliente.id ? \"Edi\\u00E7\\u00E3o\" : \"Cadastro\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.success == true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.errors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.cliente.id);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.nome);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.cpf);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.cliente.id);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.cliente.id);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,OAAO,QAAQ,YAAY;;;;;;;;ICMpBC,+BAAsE;IAClEA,uDACJ;IAAAA,iBAAM;;;;;IACNA,+BAAyE;IACrEA,YACJ;IAAAA,iBAAM;;;;IADFA,eACJ;IADIA,wCACJ;;;;;IAIRA,8BAAoC;IAGjBA,mBAAG;IAAAA,iBAAQ;IAClBA,4BAA2F;IAC/FA,iBAAM;IAGVA,+BAAsB;IAEPA,8BAAc;IAAAA,iBAAQ;IAC7BA,6BAC2D;IAC/DA,iBAAM;;;;IATiBA,eAAsB;IAAtBA,2CAAsB;IAQlCA,eAAgC;IAAhCA,qDAAgC;;;;;IAwB3CA,kCAAkE;IAC9DA,wBAA2B;IAACA,wBAChC;IAAAA,iBAAS;;;;;IAETA,kCAAsE;IAClEA,wBAA+B;IAACA,2BACpC;IAAAA,iBAAS;;;AD9CzB,OAAM,MAAOC,qBAAqB;EAOhCC,YACUC,OAAwB,EACxBC,MAAc,EACdC,cAA+B;IAF/B,YAAO,GAAPF,OAAO;IACP,WAAM,GAANC,MAAM;IACN,mBAAc,GAAdC,cAAc;IAPxB,YAAO,GAAY,KAAK;IAStB,IAAI,CAACC,OAAO,GAAG,IAAIP,OAAO,EAAE;EAC9B;EAEAQ,QAAQ;IACN,IAAIC,MAAM,GAAwB,IAAI,CAACH,cAAc,CAACG,MAAM;IAC5DA,MAAM,CAACC,SAAS,CAAEC,SAAS,IAAG;MAC1B,IAAI,CAACC,EAAE,GAAGD,SAAS,CAAC,IAAI,CAAC;MACzB,IAAG,IAAI,CAACC,EAAE,EAAC;QACT,IAAI,CAACR,OAAO,CACTS,cAAc,CAAC,IAAI,CAACD,EAAE,CAAC,CACvBF,SAAS,CACRI,QAAQ,IAAI,IAAI,CAACP,OAAO,GAAGO,QAAQ,EACnCC,aAAa,IAAI,IAAI,CAACR,OAAO,GAAG,IAAIP,OAAO,EAAE,CAC9C;;IAET,CAAC,CAAC;EACJ;EACAgB,kBAAkB;IAChB,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;EACzC;;AA/BSf,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCdlCrB,6BAAiB;MAAAA,wBAAQ;MAAAA,iBAAK;MAC9BA,6BAA4B;MACWA,YAAwC;MAAAA,iBAAK;MAEpFA,8BAAuB;MACSA;QAAA,OAAYsB,cAAU;MAAA,EAAC;MAE/CtB,8BAAiB;MAETA,wEAEM;MACNA,wEAEM;MACVA,iBAAM;MAGVA,0EAeM;MAENA,+BAAiB;MAGEA,wBAAO;MAAAA,iBAAQ;MACtBA,kCACkD;MAA3CA;QAAA;MAAA,EAA0B;MADjCA,iBACkD;MAG1DA,gCAAsB;MAEPA,uBAAM;MAAAA,iBAAQ;MACrBA,kCACgD;MAAxCA;QAAA;MAAA,EAAyB;MADjCA,iBACgD;MAK5DA,+BAAiB;MAETA,+EAES;MAETA,+EAES;MAETA,mCAAiF;MAA/BA;QAAA,OAASsB,wBAAoB;MAAA,EAAC;MAC5EtB,yBAA4C;MAACA,yBACjD;MAAAA,iBAAS;;;MA9DcA,eAAwC;MAAxCA,sEAAwC;MAOhBA,eAAqB;MAArBA,0CAAqB;MAGNA,eAAS;MAATA,oCAAS;MAM7DA,eAAgB;MAAhBA,qCAAgB;MAsBfA,eAA0B;MAA1BA,0CAA0B;MAOzBA,eAAyB;MAAzBA,yCAAyB;MAOUA,eAAiB;MAAjBA,sCAAiB;MAIZA,eAAgB;MAAhBA,qCAAgB","names":["Cliente","i0","ClientesFormComponent","constructor","service","router","activatedRoute","cliente","ngOnInit","params","subscribe","urlParams","id","getClienteById","response","errorResponse","voltarParaListagem","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Projetos\\Projeto-CadastroClientes\\src\\app\\clientes\\clientes-form\\clientes-form.component.ts","C:\\Projetos\\Projeto-CadastroClientes\\src\\app\\clientes\\clientes-form\\clientes-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ClientesService } from 'src/app/clientes.service';\r\n\r\nimport { Cliente } from '../cliente';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-clientes-form',\r\n  templateUrl: './clientes-form.component.html',\r\n  styleUrls: ['./clientes-form.component.css']\r\n})\r\n\r\n\r\nexport class ClientesFormComponent implements OnInit {\r\n\r\n  cliente : Cliente;\r\n  success: boolean = false;\r\n  errors: String | null;\r\n  id: number;\r\n\r\n  constructor( \r\n    private service: ClientesService, \r\n    private router: Router,\r\n    private activatedRoute : ActivatedRoute\r\n  ){\r\n    this.cliente = new Cliente();\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n    let params : Observable<Params> = this.activatedRoute.params\r\n    params.subscribe( urlParams => {\r\n        this.id = urlParams['id'];\r\n        if(this.id){\r\n          this.service\r\n            .getClienteById(this.id)\r\n            .subscribe( \r\n              response => this.cliente = response ,\r\n              errorResponse => this.cliente = new Cliente()\r\n            )\r\n        }\r\n    })\r\n  }\r\n  voltarParaListagem(){\r\n    this.router.navigate(['/clientes-lista'])\r\n    }\r\n\r\n    \r\n  }\r\n","<h1 class=\"mt-4\">Clientes</h1>\r\n<ol class=\"breadcrumb mb-4\">\r\n    <li class=\"breadcrumb-item active\">{{ cliente.id ? 'Edição' : 'Cadastro' }}</li>\r\n</ol>\r\n<div class=\"container\">\r\n    <form #clienteForm=\"ngForm\" (ngSubmit)=\"onSubmit()\" >\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"success == true\">\r\n                    Cliente salvo/atualizado com sucesso!    \r\n                </div>\r\n                <div class=\"alert alert-danger\" role=\"alert\" *ngFor=\"let erro of errors\">\r\n                    {{ erro  }}    \r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\" *ngIf=\"cliente.id\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <label>ID:</label>\r\n                    <input type=\"text\" [ngModel]=\"cliente.id\" name=\"id\" class=\"form-control\" disabled=\"true\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <label>Data Cadastro:</label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"dataCadastro\"\r\n                           [ngModel]=\"cliente.dataCadastro\" disabled=\"true\"  />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <label>Nome: *</label>\r\n                    <input type=\"text\" class=\"form-control\" \r\n                           [(ngModel)]=\"cliente.nome\" name=\"nome\"   />\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <label>CPF: *</label>\r\n                    <input type=\"text\" class=\"form-control\" \r\n                            [(ngModel)]=\"cliente.cpf\" name=\"cpf\"  />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <button type=\"submit\" class=\"btn btn-success\" *ngIf=\"!cliente.id\">\r\n                    <i class=\"fa fa-save\" ></i> Salvar\r\n                </button>\r\n\r\n                <button type=\"submit\" class=\"btn btn-primary ml-1\" *ngIf=\"cliente.id\">\r\n                    <i class=\"fa fa-sync-alt\" ></i> Atualizar\r\n                </button>\r\n\r\n                <button type=\"button\" class=\"btn btn-danger ml-1\" (click)=\"voltarParaListagem()\">\r\n                    <i class=\"fa fa-arrow-alt-circle-left\" ></i> Voltar\r\n                </button>\r\n            </div>\r\n     \r\n        </div>\r\n    </form>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}